# -*- coding: utf-8 -*-
"""Hello

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ABgoQIwh7dVA-uACo1q-kb8IzgS-g1EE
"""

# Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import streamlit as st
from streamlit.logger import get_logger
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go

LOGGER = get_logger(__name__)


def run():

    st.write("# Andrew Burk's ECON 8320 Semester Project")

    st.markdown(
        """
        This dashboard will allow you to examine demographic variables
        based on union membership.

        In order to do this chose a metro area from the drop down
        and the line graphs will be populated with the chosen city's
        information.

        The demographics chosen for this demonstration are:
        - PEERNLAB union member,y/n
        - HEFAMINC Household-total family income in past 12 month
        - HETENURE Household-own/rent living quarters;
        - HRHTYPE Household-type of family/single individual;
        - PEEDUCA Demographics-highest level of school completed;
        - PRFTLF Labor Force-full time/part-time;
        - PTERNH1O Earnings-hourly pay rate, excluding overtime

        Data is from Current Population Survey from the US Census

        *Note: Due to changing FIPS codes for metro areas and their sizes, data may not be available for every year*

    """
    )
    #read the csv
    df = pd.read_csv("https://github.com/andrewburk2024/andrew-burk-sem-proj/raw/main/CENSUS_CPS_DATA.csv")

    #creating a list of unique metro areas for dropdown
    df_dropdown = df["Metro Area"].unique()
    #sorting the unique list
    df_dropdown_sort = df_dropdown.sort()
    #creating dropdown list in streamlit and placing into variable for use in graphs
    option = st.selectbox(label = "Metro Area", options = df_dropdown)

    #union labeling
    union_labels = {
        1: "Union Member",
        2: "Non-Union Member"
    }

    ###FIRST FIGURE - LINE
    #simple line graph to look at number of respondents for union membership or non-membership
    df_selected_metro1 = df[df["Metro Area"] == option]
    df_selected_metro1["PEERNLAB"] = df_selected_metro1["PEERNLAB"].map(union_labels)
    df_union_grouped = df_selected_metro1.groupby(["Year", "PEERNLAB"]).size().reset_index(name="Count")
    
    fig_union = px.line(df_union_grouped, x = "Year", y = "Count", color = "PEERNLAB", title = f"Union Membership over Time for {option}")
    st.plotly_chart(fig_union)

    ###SECOND/THIRD FIGURE - HISTOGRAM
    #buiding union membership histogram looking at HEFAMINC
    df_selected_metro1 = df[df["Metro Area"] == option]
    family_income = {
    1: "Less Than $5,000",
    2: "5,000 To 7,499",
    3: "7,500 To 9,999",
    4: "10,000 To 12,499",
    5: "12,500 To 14,999",
    6: "15,000 To 19,999",
    7: "20,000 To 24,999",
    8: "25,000 To 29,999",
    9: "30,000 To 34,999",
    10: "35,000 To 39,999",
    11: "40,000 To 49,999",
    12: "50,000 To 59,999",
    13: "60,000 To 74,999",
    14: "75,000 To 99,999",
    15: "100,000 To 149,999",
    16: "150,000 or More"
    }

    #titles for  total family income figures
    title1u = f"Union Member Total Family Income in Past 12 Months for {option}"
    title1nu = f"Non-Union Member Total Family Income in Past 12 Months for {option}"
    #matching union codes with labels
    df_selected_metro1["PEERNLAB"] = df_selected_metro1["PEERNLAB"].map(union_labels)
    #matching incomes with labels
    df_selected_metro1["HEFAMINC"] = df_selected_metro1["HEFAMINC"].map(family_income)

    union_data1 = df_selected_metro1[df_selected_metro1["PEERNLAB"] == "Union Member"]
    non_union_data1 = df_selected_metro1[df_selected_metro1["PEERNLAB"] == "Non-Union Member"]

    #building figures for streamlit
    fig1u = px.histogram(union_data1, x="Year", color="HEFAMINC",
                      title=title1u, labels={"Year": "Year", "HEFAMINC": "Total Family Income"},
                      category_orders={"HEFAMINC": list(family_income.values())})

    fig1nu = px.histogram(non_union_data1, x="Year", color="HEFAMINC",
                      title=title1nu, labels={"Year": "Year", "HEFAMINC": "Total Family Income"},
                      category_orders={"HEFAMINC": list(family_income.values())})

    st.plotly_chart(fig1u)
    st.plotly_chart(fig1nu)

    ###FOURTH FIGURE - BAR
    #buiding union membership bar graph looking at HETENURE
    df_selected_metro2 = df[df["Metro Area"] == option]

    #title for owning/renting    
    title2 = f"Non-Union and Union Member Own or Rent for {option}"
    housing_labels= {
        "3": "Occupied without payment of cash rent",
        "-1": "Not in Universe",
        "2": "Rented for cash",
        "1": "Owned Or Being Bought By A Hh Member"
    }
    

    ###FIFTH/SIXTH FIGURE - HISTOGRAM
    #buiding union membership histograms looking at HRHTYPE
    df_selected_metro3 = df[df["Metro Area"] == option]
    #labels for household type
    household_type = {
        6: "Civilian Male Primary Individual",
        -1: "In Universe, Met No Conditions To Assign",
        5: "Primary Family Hhlder-Rp In AF,unmar.",
        8: "Primary Individual Hhld-Rp In AF",
        10: "Grp Quarters Without Family",
        2: "Husb/Wife Prim. Family(either/Both AF)",
        3: "Unmarried Civilian Male-Prim Fam Hhlder",
        7: "Civilian Female Primary Individual",
        1: "Husband/Wife Primary Family(neither AF)",
        4: "Unmarried Civ. Female-Prim Fam Hhlder",
        0: "Non-Interview Household",
        9: "Group Quarters With Family"}
    
    #titles for household type figures
    title3u = f"Union Member Household Type for {option}"
    title3nu = f"Non-Union Member Household Type for {option}"

    #mapping union labels for this figure
    df_selected_metro3["PEERNLAB"] = df_selected_metro3["PEERNLAB"].map(union_labels) 
    #mapping household types for this figure
    df_selected_metro3["HRHTYPE"] = df_selected_metro3["HRHTYPE"].map(household_type) 
    #splitting data for their respective figures
    union_data3 = df_selected_metro3[df_selected_metro3["PEERNLAB"] == "Union Member"]
    non_union_data3 = df_selected_metro3[df_selected_metro3["PEERNLAB"] == "Non-Union Member"]

    #building figures for streamlit
    fig3u = px.histogram(union_data3, x="Year", color="HRHTYPE",
                      title=title3u, labels={"Year": "Year", "HRHTYPE": "Family Type"},
                      category_orders={"HRHTYPE": list(household_type.values())})

    fig3nu = px.histogram(non_union_data3, x="Year", color="HRHTYPE",
                      title=title3nu, labels={"Year": "Year", "HRHTYPE": "Family Type"},
                      category_orders={"HRHTYPE": list(household_type.values())})

    st.plotly_chart(fig3u)
    st.plotly_chart(fig3nu) 

    ###SEVENTH/EIGHTH FIGURE - HISTOGRAM
    #buiding union membership histograms looking at PEEDUCA
    df_selected_metro4 = df[df["Metro Area"] == option]

    #labels for education
    education = {
        46: "DOCTORATE DEGREE(EX:PhD,EdD)",
      33: "5th Or 6th Grade",
      44: "MASTER'S DEGREE(EX:MA,MS,MEng,MEd,MSW)",
      39: "High School Grad-Diploma Or Equiv (ged)",
      42: "Associate Deg.-Academic Program",
      31: "Less Than 1st Grade",
      38: "12th Grade No Diploma",
      40: "Some College But No Degree",
      -1: "Not in Universe",
      32: "1st,2nd,3rd Or 4th Grade",
      43: "Bachelor's Degree(ex:ba,ab,bs)",
      37: "11th Grade",
      45: "Professional School Deg(ex:md,dds,dvm)",
      36: "10th Grade",
      35: "9th Grade",
      34: "7th Or 8th Grade",
      41: "Associate Degree-Occupational/Vocationl"
    }

    #titles for the figures
    title4u = f"Union Member Education for {option}"
    title4nu = f"Non-Union Member Education for {option}"

    #mapping union labels for this figure
    df_selected_metro4["PEERNLAB"] = df_selected_metro4["PEERNLAB"].map(union_labels)
    #mapping education for this figure
    df_selected_metro4["PEEDUCA"] = df_selected_metro4["PEEDUCA"].map(education)

    #splitting the data for figure
    union_data4 = df_selected_metro4[df_selected_metro4["PEERNLAB"] == "Union Member"]
    non_union_data4 = df_selected_metro4[df_selected_metro4["PEERNLAB"] == "Non-Union Member"]

    #figures for education
    fig4u = px.histogram(union_data4, x="Year", color="PEEDUCA",
                      title=title4u, labels={"Year": "Year", "PEEDUCA": "Education"},
                      category_orders={"PEEDUCA": list(household_type.values())})

    fig4nu = px.histogram(non_union_data4, x="Year", color="PEEDUCA",
                      title=title4nu, labels={"Year": "Year", "PEEDUCA": "Education"},
                      category_orders={"PEEDUCA": list(household_type.values())})


    st.plotly_chart(fig4u)
    st.plotly_chart(fig4nu)

    ###NINTH FIGURE - SCATTERPLOT
    #buiding union membership scatterplot looking at PRFTLF
    df_selected_metro5 = df[df["Metro Area"] == option]
    #labels for PRFTLF
    full_part = {
        1: "Full time labor force",
        2: "Part Time Labor Force",
        -1: "In Universe, Met No Conditions To Assign"
    }
    #labelling union variable
    df_selected_metro5["PEERNLAB"] = df_selected_metro5["PEERNLAB"].map(union_labels)
    #labelling full-/part-time variable
    df_selected_metro5["PRFTLF"] = df_selected_metro5["PRFTLF"].map(full_part)

    metro5_grouped = df_selected_metro5.groupby(["Year","PEERNLAB","PRFTLF"]).size().reset_index(name="Count")
    #building scatterplot
    fig5 = px.bar(metro5_grouped, x = "Year", y = "Count", color = "PRFTLF", hover_name="PEERNLAB",
                  title = f"Full-/Part-time by Union Membership for {option}")

    st.plotly_chart(fig5)

    ###TENTH - Violin
    #buiding union membership violin looking at PTERNH1O
    df_selected_metro6 = df[df["Metro Area"] == option]
    #labelling union variable
    df_selected_metro6["PEERNLAB"] = df_selected_metro6["PEERNLAB"].map(union_labels)

    #building figure
    fig6 = px.violin(df_selected_metro6, x = "Year", y = "PTERNH1O", color = "PEERNLAB",
                     labels = {"PTERNH1O" : "Hourly Wage"})

    st.plotly_chart(fig6)

if __name__ == "__main__":
    run()